---
- name: create ustreamer group
  group:
    name: "{{ ustreamer_group }}"
    state: present

- name: create ustreamer user
  user:
    name: "{{ ustreamer_user }}"
    group: "{{ ustreamer_group }}"
    groups:
      - video
    system: yes
    create_home: yes

- name: check for a boot config file
  stat:
    path: /boot/config.txt
  register: boot_config_result

- name: save whether boot config file exists
  set_fact:
    boot_config_exists: "{{ boot_config_result.stat.exists }}"

- name: check whether this machine has a uStreamer settings file
  stat:
    path: "{{ ustreamer_settings_file }}"
  register: ustreamer_settings_file_result

- name: read saved settings
  import_tasks: check_saved_settings.yml
  when: ustreamer_settings_file_result.stat.exists | bool

- name: configure TC358743 HDMI capture chip
  import_tasks: provision_tc358743.yml
  when: ustreamer_capture_device == 'tc358743'

- name: uninstall TC358743 settings if they're not in use
  import_tasks: remove_tc358743.yml
  when: ustreamer_capture_device != 'tc358743'

- name: save whether boot config file exists
  set_fact:
    ustreamer_is_os_raspbian: "{{ ansible_lsb.id is defined and ansible_lsb.id == 'Raspbian' }}"

- name: collect universal required apt packages
  set_fact:
    ustreamer_packages:
      - build-essential
      - git
      - libevent-dev
      - libbsd-dev
      - uuid-dev

- name: collect Raspberry Pi OS specific required apt packages
  set_fact:
    ustreamer_packages: "{{ ustreamer_packages }} + ['libjpeg9-dev']"
  when: ustreamer_is_os_raspbian

- name: install libraspberrypi-dev if we're using OpenMax IL acceleration
  set_fact:
    ustreamer_packages: "{{ ustreamer_packages }} + ['libraspberrypi-dev']"
  when: ustreamer_enable_omx

- name: collect Debian-specific required apt packages
  set_fact:
    ustreamer_packages: "{{ ustreamer_packages }} + ['libjpeg62-turbo-dev']"
  when: ansible_distribution == 'Debian' and not ustreamer_is_os_raspbian

- name: collect Ubuntu-specific required apt packages
  set_fact:
    ustreamer_packages: "{{ ustreamer_packages }} + ['gcc', 'libjpeg8', 'libjpeg-dev', 'libjpeg-turbo8', 'libuuid1', 'libbsd0', 'make']"
  when: ansible_distribution == 'Ubuntu'

- name: collect Janus WebRTC plugin specific required apt packages
  set_fact:
    ustreamer_packages: "{{ ustreamer_packages }} + ['libglib2.0-dev', 'libjansson-dev']"
  when: ustreamer_compile_janus_plugin

- name: install uStreamer pre-requisite packages
  apt:
    name: "{{ ustreamer_packages }}"
    state: present

- name: create uStreamer folder
  file:
    path: "{{ ustreamer_dir }}"
    state: directory
    owner: "{{ ustreamer_user }}"
    group: "{{ ustreamer_group }}"

- name: get uStreamer repo
  git:
    repo: "{{ ustreamer_repo }}"
    dest: "{{ ustreamer_dir }}"
    version: "{{ ustreamer_repo_version }}"

# We always need to clean & build uStreamer to ensure that the uStreamer service
# is in sync with its dependencies installed on the device.
# Issue: https://github.com/tiny-pilot/ansible-role-tinypilot/issues/174
- name: clean uStreamer repository
  make:
    chdir: "{{ ustreamer_dir }}"
    target: clean
  tags:
    - molecule-idempotence-notest

- name: build uStreamer
  make:
    chdir: "{{ ustreamer_dir }}"
    params:
      WITH_OMX: "{{ ustreamer_enable_omx | int }}"
      WITH_JANUS: "{{ ustreamer_compile_janus_plugin | int }}"
  notify:
    - restart uStreamer
  tags:
    - molecule-idempotence-notest

- name: fix uStreamer folder permissions
  file:
    path: "{{ ustreamer_dir }}"
    state: directory
    owner: "{{ ustreamer_user }}"
    group: "{{ ustreamer_group }}"
    recurse: yes
  # TODO: Figure out why this fails idempotency otherwise.
  tags:
    - molecule-idempotence-notest

- name: install uStreamer as a service
  template:
    src: ustreamer.systemd.j2
    dest: /lib/systemd/system/ustreamer.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd config
    - restart uStreamer
  tags:
    - systemd-config

- name: enable systemd uStreamer service file
  systemd:
    name: ustreamer
    enabled: yes

- name: save uStreamer settings file
  template:
    src: config.yml.j2
    dest: "{{ ustreamer_settings_file }}"
    owner: "{{ ustreamer_user }}"
    group: "{{ ustreamer_group }}"
    mode: '0644'
